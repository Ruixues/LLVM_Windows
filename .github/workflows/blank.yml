# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Install Visual Studio
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install Clang
        continue-on-error: true
        run: |
          git clone https://github.com/llvm/llvm-project
          cd llvm-project
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" -A x64 -Thost=x64 ../llvm
      - name: Build
        run: |
          cd llvm-project
          cd build
          cmake --build . --config Release --target ALL_BUILD
          cmake --build . --config Release --target INSTALL
      - name: Zip Release
  # You may pin to the exact commit or the version.
  # uses: TheDoctor0/zip-release@a1afcab9c664c9976ac398fa831eac67bed1eb0e
        uses: TheDoctor0/zip-release@0.4.1
        with:
    # Filename for archive
          filename: "release.zip" # default is release.zip
    # Working directory before zipping
          directory: "C:/Program Files/LLVM"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: "llvm"
          release_name: Release LLVM
          body: |
            LLVM
          draft: false
          prerelease: false
      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            # The path to the asset you want to upload
            asset_path: ./release.zip
    # The name of the asset you want to upload
            asset_name: "release.zip"
    # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
            asset_content_type: application/zip
